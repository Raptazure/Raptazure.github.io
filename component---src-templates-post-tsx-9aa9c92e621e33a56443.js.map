{"version":3,"sources":["webpack:///./src/components/Tag.tsx","webpack:///./src/components/Utterances.tsx","webpack:///./src/templates/post.tsx","webpack:///./src/components/Time.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js"],"names":["StyledSpan","Tag","children","Utterances","repo","rootElm","React","createRef","useEffect","utterances","document","createElement","utterancesConfig","src","branch","theme","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","current","appendChild","className","style","top","ref","query","PostTemplate","data","Helmet","title","mdx","frontmatter","site","siteMetadata","meta","name","content","Page","Container","lang","fields","Time","date","tags","map","tag","key","components","Link","body","StyledTime","MDXRenderer","require","module","useMDXComponents","useMDXScope","scope","props","mdxComponents","mdxScope","End","fullScope","values","fn","exports","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments"],"mappings":"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","file":"component---src-templates-post-tsx-9aa9c92e621e33a56443.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledSpan = styled.span`\n  color: #808080;\n  min-width: 200px;\n  margin-right: 0.5em;\n  font-size: 0.9rem;\n  font-variant-numeric: tabular-nums lining-nums;\n  text-transform: uppercase;\n\n  &:before {\n    content: '#';\n  }\n`;\n\nconst Tag: React.FC = ({ children }) => <StyledSpan>{children}</StyledSpan>;\n\nexport default Tag;\n","import React, { useEffect } from 'react';\n\nconst src = 'https://utteranc.es/client.js';\nconst branch = 'master';\nconst LIGHT_THEME = 'github-light';\n\ninterface CommentProps {\n  repo: string;\n}\n\nexport const Utterances: React.FC<CommentProps> = ({ repo }) => {\n  const rootElm = React.createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    const utterances = document.createElement('script');\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      theme: LIGHT_THEME,\n      label: 'comment',\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous'\n    };\n\n    Object.keys(utterancesConfig).forEach((configKey) => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey]);\n    });\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    rootElm.current!.appendChild(utterances);\n  }, []);\n\n  return <div className=\"utterances\" style={{ top: 50 }} ref={rootElm} />;\n};\n","import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { MDXProvider } from '@mdx-js/react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\n\nimport Page from '@/components/Page';\nimport Time from '@/components/Time';\nimport Tag from '@/components/Tag';\nimport Container from '@/components/Container';\nimport IndexLayout from '@/layouts';\nimport { Utterances } from '@/components/Utterances';\n\nconst PostTemplate: React.FC<PostTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <Helmet\n      title={`${data.mdx.frontmatter.title} | ${data.site.siteMetadata.title}`}\n      meta={[{ name: 'twitter:title', content: `${data.mdx.frontmatter.title} | ${data.site.siteMetadata.title}` }]}\n    />\n    <Page>\n      <Container>\n        <article lang={data.mdx.fields.lang}>\n          <h1>{data.mdx.frontmatter.title}</h1>\n          <Time>{data.mdx.frontmatter.date}</Time>\n          {data.mdx.frontmatter.tags.map((tag) => (\n            <Tag key={tag}>{tag}</Tag>\n          ))}\n          <MDXProvider components={{ Link }}>\n            <MDXRenderer>{data.mdx.body}</MDXRenderer>\n          </MDXProvider>\n        </article>\n        <Utterances repo=\"raptazure/comment\" />\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default PostTemplate;\n\ninterface PostTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        author: {\n          name: string;\n          twitter: string;\n          github: string;\n        };\n      };\n    };\n    mdx: {\n      body: string;\n      excerpt: string;\n      fields: {\n        lang: string;\n      };\n      frontmatter: {\n        title: string;\n        date: string;\n        tags: string[];\n      };\n    };\n  };\n}\n\nexport const query = graphql`\n  query PostTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          twitter\n          github\n        }\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      excerpt\n      fields {\n        lang\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n      }\n    }\n  }\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledTime = styled.time`\n  color: #808080;\n  min-width: 200px;\n  margin-right: 1rem;\n  font-size: 0.9rem;\n  font-variant-numeric: tabular-nums lining-nums;\n`;\n\nconst Time: React.FC = ({ children }) => <StyledTime>{children}</StyledTime>;\n\nexport default Time;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;"],"sourceRoot":""}