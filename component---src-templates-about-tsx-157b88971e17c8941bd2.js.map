{"version":3,"sources":["webpack:///./src/templates/about.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js"],"names":["AboutTemplate","data","title","mdx","frontmatter","site","siteMetadata","lang","fields","components","Link","body","query","MDXRenderer","require","module","React","useMDXComponents","useMDXScope","scope","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","exports","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments"],"mappings":"6FAAA,2JA0BeA,UAhBqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClD,YAAC,IAAD,KACE,YAAC,IAAD,CAAQC,MAAUD,EAAKE,IAAIC,YAAYF,MAA1B,MAAqCD,EAAKI,KAAKC,aAAaJ,QACzE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,uBAASK,KAAMN,EAAKE,IAAIK,OAAOD,MAC7B,sBAAKN,EAAKE,IAAIC,YAAYF,OAC1B,YAAC,cAAD,CAAaO,WAAY,CAAEC,cACzB,YAAC,cAAD,KAAcT,EAAKE,IAAIQ,YAqC5B,IAAMC,EAAQ,c,uBCjDrB,IAAMC,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,woBCTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBd,E,EAAAA,IAClBe,EAAgBJ,EAAQ,QAAxBI,YAERH,UAAiB,SAAqB,GAKlC,IAJFI,EAIC,EAJDA,MACAV,EAGC,EAHDA,WACAW,EAEC,EAFDA,SACGC,EACF,uCACKC,EAAgBL,EAAtB,GACMM,EAAWL,EAFhB,GAKKM,EAAMR,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMS,EAAS,GAGbT,MAHa,EAIbb,OAJF,GAQMuB,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOJ,EAAA,mBAA2BP,WAAYa,GAA9C,M,mBCrBFP,EAAOgB,QAbP,WACE,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKC,UAAUC,SAASC,KAAKP,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOI,GACP,OAAO,K,qBCTX,IAAIC,EAAiB,EAAQ,QAEzBC,EAA2B,EAAQ,QAEvC,SAASC,EAAWC,EAAQC,EAAMC,GAchC,OAbIJ,IACF3B,EAAOgB,QAAUY,EAAaX,QAAQC,UAEtClB,EAAOgB,QAAUY,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGF,GAChB,IACIK,EAAW,IADGC,SAASC,KAAKH,MAAML,EAAQG,IAG9C,OADID,GAAOL,EAAeS,EAAUJ,EAAMT,WACnCa,GAIJP,EAAWM,MAAM,KAAMI,WAGhCtC,EAAOgB,QAAUY","file":"component---src-templates-about-tsx-157b88971e17c8941bd2.js","sourcesContent":["import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { MDXProvider } from '@mdx-js/react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\n\nimport Page from '@/components/Page';\nimport Container from '@/components/Container';\nimport IndexLayout from '@/layouts';\n\nconst AboutTemplate: React.FC<AboutTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <Helmet title={`${data.mdx.frontmatter.title} | ${data.site.siteMetadata.title}`} />\n    <Page>\n      <Container>\n        <article lang={data.mdx.fields.lang}>\n          <h1>{data.mdx.frontmatter.title}</h1>\n          <MDXProvider components={{ Link }}>\n            <MDXRenderer>{data.mdx.body}</MDXRenderer>\n          </MDXProvider>\n        </article>\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default AboutTemplate;\n\ninterface AboutTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        author: {\n          name: string;\n          twitter: string;\n          github: string;\n        };\n      };\n    };\n    mdx: {\n      body: string;\n      excerpt: string;\n      fields: {\n        lang: string;\n      };\n      frontmatter: {\n        title: string;\n        lang: string;\n      };\n    };\n  };\n}\n\nexport const query = graphql`\n  query AboutTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          twitter\n          github\n        }\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      excerpt\n      fields {\n        lang\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;"],"sourceRoot":""}